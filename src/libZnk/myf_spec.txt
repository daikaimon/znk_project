myfファイルの仕様


＠クォーティング文字列の定義:
  ファイルの一番初めの行に @def_quoteで始まる行を記述することでクォーティング文字列を宣言できる.
  この指定がない場合、@def_quote [' '] が指定されたのと同等とみなす.
  このとき引数としてホワイトスペースで区切られた文字列を２つ取り、これはユーザが自由に指定できる.
  ( ただしその長さはそれぞれ31文字以下でなければならない. これ以上長いものを指定した場合は途中で
  打ち切られる )
  例えば @def_quote [' '] という記述は、クォーティングの開始として [' クォーティングの終了として
  '] を以降の行で用いることを宣言する.

  このクォーティングは複数行に跨るデータを囲うこともできる.

    例.
    text = ['なるほど完璧な作戦っスねーーーっ
    不可能だという点に目をつぶればよぉ〜']

  またこれで囲まれたデータはその中にたとえいかなる特殊文字が含まれていようとも、その文字がそのまま扱われる.
  (正規表現などにみられるエスケープ文字などといった邪悪なものは存在しない).
  従ってこの場合、' " \ などを使った典型パターンもそのまま記述でき、SJISコードの「表」や「ソ」
  などを含む日本語も安心して使える.

  この宣言はファイルの最初の行において一度だけ行うことができる.
  仮に２行目以降宣言してもそれは単に読み飛ばされる.


＠行配列セクション(SectionLines)について:
  行頭の@@L nameは行配列セクションの開始を意味する.
  以降簡潔のため、これをSectionLinesと呼ぶ.
  nameの部分には、このSectionLinesの名前を記述する.
  nameの部分は非ホワイトスペース文字を使用可能である.
  行頭の@@.のみの行に至ることでSectionLinesは終了となる.

  SectionLinesの開始行と終了行の間に挟まれた行において文字列の配列データを記述できる.
  このとき一行につき一つの要素が対応する. この値はクォーティング文字列で囲わないこと.
  (囲ったとしてもそのクォーティング文字列はそのままデータとみなされる)

    例.
    @@L starting_hosts
    http://www.google.com
    http://www.yahoo.co.jp
    @@.
    
  変数代入行において行頭に#を記述することでその部分をコメント化することもできる.

    例.
    @@L starting_hosts
    http://www.google.com
    #http://www.yahoo.co.jp
    http://www.youtube.com
    @@.

  ただしこのようなコメントは transientである.
  つまり一度myfをloadしてそれを同ファイルへsaveするようなプログラムでは跡形もなく消去される.
  上の例ではsaveしたmyf内では # で始まる行は消えてしまうことだろう.


＠変数セクション(SectionVars)について:
  行頭の@@V nameは変数セクションの開始を意味する.
  以降簡潔のため、これをSectionVarsと呼ぶ.
  nameの部分にはSectionVarsの名前を記述する.
  nameの部分は非ホワイトスペース文字を使用可能である.
  行頭の@@.のみの行に至ることでSectionVarsは終了となる.

  SectionVarsの開始行と終了行の間に挟まれた行を変数代入行と呼ぶ.
  これは以下の形式となる.

    var_name = quoting_value

  quoting_valueにおいて値を記述するが、この値は必ずクォーティング文字列で囲う必要がある.

    例.
    @@V last_access
    date = ['2016/03/25']
    time = ['23:55:01']
    @@.

  変数代入行において行頭に#を記述することでその部分をコメント化することもできる.

    例.
    @@V last_access
    #date = ['2016/03/25']
    date = ['2016/03/26']
    #time = ['23:55:01']
    time = ['01:03:04']
    @@.

  ただしこのようなコメントは transientである.
  つまり一度myfをloadしてそれを同ファイルへsaveするようなプログラムでは跡形もなく消去される.
  上の例ではsaveしたmyf内では # で始まる行は消えてしまうことだろう.


＠セクション外領域(OutOfSection)について:
  SectionLinesとSectionVars以外の領域においては、myfパーサは基本的に無視する.
  この部分をOutOfSectionと呼ぶ.
  従って、この部分にはコメントなどを記述しておくこともできる.
  ただしこのようなコメントは transientである.
  つまり一度myfをloadしてそれを同ファイルへsaveするようなプログラムでは跡形もなく消去される.

  OutOfSection領域であっても、@def_quoteで始まる最初の行は特別な意味を持つ.
  これについては、上で述べたとおりである.


＠特殊空文字について:
  これは滅多に登場しない例外的な場合に備えた仕様である.

  行頭が@@^の場合、myfのパーサはクォーティングされている場合を除き
  これを無条件に空文字とみなす. myfではこれを特殊空文字と呼ぶ.
  これによって行頭の # @@L @@V @@. @@^ を特殊記号列ではなく本当にデータとして扱いたい場合、
  (そんなことは滅多にないだろうが) それぞれ @@^#  @@^@@L  @@^@@V  @@^@@.  @@^@@^ と記述することで
  これを実現できる.
  このあたりは仕様からエスケープシーケンスを排除した代償が間接的に現れているが
  こんな記号列を実用上のデータで扱う機会は滅多にないということでよしとしよう.
  尚、行頭以外に@@^が出現した場合は、空文字ではなくそのまま扱われる.

以上
